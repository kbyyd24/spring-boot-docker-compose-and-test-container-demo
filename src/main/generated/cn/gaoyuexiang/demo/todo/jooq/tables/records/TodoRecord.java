/*
 * This file is generated by jOOQ.
 */
package cn.gaoyuexiang.demo.todo.jooq.tables.records;


import cn.gaoyuexiang.demo.todo.jooq.tables.Todo;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TodoRecord extends UpdatableRecordImpl<TodoRecord> implements Record2<UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.todo.id</code>.
     */
    public TodoRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.todo.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.todo.title</code>.
     */
    public TodoRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.todo.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Todo.TODO.ID;
    }

    @Override
    public Field<String> field2() {
        return Todo.TODO.TITLE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public TodoRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TodoRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public TodoRecord values(UUID value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TodoRecord
     */
    public TodoRecord() {
        super(Todo.TODO);
    }

    /**
     * Create a detached, initialised TodoRecord
     */
    public TodoRecord(UUID id, String title) {
        super(Todo.TODO);

        setId(id);
        setTitle(title);
        resetChangedOnNotNull();
    }
}
